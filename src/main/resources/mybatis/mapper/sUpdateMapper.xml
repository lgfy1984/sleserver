<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Welcome to use the TableGo Tools.
    
    http://vipbooks.iteye.com
    http://blog.csdn.net/vipbooks
    http://www.cnblogs.com/vipbooks
    
    Author:bianj
    Email:edinsker@163.com
    Version:5.8.0
-->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- T_S_UPDATE -->
<mapper namespace="com.qmh.web.dao.SUpdateMapper">
    <!-- 结果映射 -->
    <resultMap id="sUpdateMap" type="com.qmh.web.entity.SUpdate">
        <id column="ID" property="id" jdbcType="VARCHAR" />
        <result column="VERSION" property="version" jdbcType="VARCHAR" />
        <result column="NUM_VERSION" property="numVersion" jdbcType="INTEGER" />
        <result column="VERSION_TYPE" property="versionType" jdbcType="INTEGER" />
        <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
        <result column="DOWNLOAD_URL" property="downloadUrl" jdbcType="VARCHAR" />
        <result column="RELEVANCE_URL" property="relevanceUrl" jdbcType="VARCHAR" />
        <result column="CREATED_AT" property="createdAt" jdbcType="TIMESTAMP" />
        <result column="UPDATED_AT" property="updatedAt" jdbcType="TIMESTAMP" />
    </resultMap>
    
    <!-- 表所有字段 -->
    <sql id="allColumns">
        ID, VERSION, NUM_VERSION, VERSION_TYPE, DESCRIPTION, DOWNLOAD_URL, 
        RELEVANCE_URL, CREATED_AT, UPDATED_AT
    </sql>
    
    <!-- 查询所有数据 -->
    <select id="findSUpdateAll" resultMap="sUpdateMap">
        SELECT
        <include refid="allColumns" />
        FROM T_S_UPDATE
    </select>
    
    <!-- 根据条件查询数据 -->
    <select id="findSUpdateByCondition" resultMap="sUpdateMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM T_S_UPDATE WHERE 1 = 1
        <if test="versionType != null">
            AND VERSION_TYPE = #{versionType}
        </if>
    </select>
    
    <!-- 根据主键查询数据 -->
    <select id="findSUpdateByIds" resultMap="sUpdateMap" parameterType="list">
        SELECT
        <include refid="allColumns" />
        FROM T_S_UPDATE WHERE ID IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    
    <!-- 插入数据 -->
    <insert id="insertSUpdate" parameterType="map">
        INSERT INTO T_S_UPDATE (<include refid="allColumns" />)
        VALUES (
            #{id},
            #{version},
            #{numVersion},
            #{versionType},
            #{description},
            #{downloadUrl},
            #{relevanceUrl},
            #{createdAt},
            #{updatedAt}
        )
    </insert>
    
    <!-- 批量插入数据 -->
    <insert id="insertSUpdates" parameterType="list">
        INSERT INTO T_S_UPDATE (<include refid="allColumns" />)
        VALUES (
        <foreach collection="list" index="index" item="item" separator=",">
            (
                #{item.id},
                #{item.version},
                #{item.numVersion},
                #{item.versionType},
                #{item.description},
                #{item.downloadUrl},
                #{item.relevanceUrl},
                #{item.createdAt},
                #{item.updatedAt}
            )
        </foreach>
    </insert>
    
    <!-- 修改数据 -->
    <update id="updateSUpdate" parameterType="map">
        UPDATE T_S_UPDATE SET
            VERSION = #{version},
            NUM_VERSION = #{numVersion},
            VERSION_TYPE = #{versionType},
            DESCRIPTION = #{description},
            DOWNLOAD_URL = #{downloadUrl},
            RELEVANCE_URL = #{relevanceUrl},
            CREATED_AT = #{createdAt},
            UPDATED_AT = #{updatedAt}
        WHERE ID = #{id}
    </update>
    
    <!-- 批量修改数据 -->
    <update id="updateSUpdates" parameterType="list">
        <foreach collection="list" index="index" item="item" separator=";">
            UPDATE T_S_UPDATE SET
                VERSION = #{item.version},
                NUM_VERSION = #{item.numVersion},
                VERSION_TYPE = #{item.versionType},
                DESCRIPTION = #{item.description},
                DOWNLOAD_URL = #{item.downloadUrl},
                RELEVANCE_URL = #{item.relevanceUrl},
                CREATED_AT = #{item.createdAt},
                UPDATED_AT = #{item.updatedAt}
            WHERE ID = #{item.id}
        </foreach>
    </update>
    
    <!-- 根据主键删除数据 -->
    <delete id="deleteSUpdateById" parameterType="string">
        DELETE FROM T_S_UPDATE WHERE ID = #{id}
    </delete>
    
    <!-- 根据主键批量删除数据 -->
    <delete id="deleteSUpdateByIds" parameterType="list">
        DELETE FROM T_S_UPDATE WHERE ID IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>