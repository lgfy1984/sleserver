<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Welcome to use the TableGo Tools.
    
    http://vipbooks.iteye.com
    http://blog.csdn.net/vipbooks
    http://www.cnblogs.com/vipbooks
    
    Author:bianj
    Email:edinsker@163.com
    Version:5.8.0
-->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- T_S_DEPART -->
<mapper namespace="com.qmh.web.entity.sDepart">
    <!-- 结果映射 -->
    <resultMap id="sDepartMap" type="com.qmh.web.entity.SDepart">
        <id column="ID" property="id" jdbcType="VARCHAR" />
        <result column="DEPARTNAME" property="departname" jdbcType="VARCHAR" />
        <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
        <result column="PARENTDEPARTID" property="parentdepartid" jdbcType="VARCHAR" />
        <result column="ORG_CODE" property="orgCode" jdbcType="VARCHAR" />
        <result column="ORG_TYPE" property="orgType" jdbcType="VARCHAR" />
        <result column="MOBILE" property="mobile" jdbcType="VARCHAR" />
        <result column="FAX" property="fax" jdbcType="VARCHAR" />
        <result column="ADDRESS" property="address" jdbcType="VARCHAR" />
        <result column="DEPART_ORDER" property="departOrder" jdbcType="VARCHAR" />
    </resultMap>
    
    <!-- 表所有字段 -->
    <sql id="allColumns">
        ID, DEPARTNAME, DESCRIPTION, PARENTDEPARTID, ORG_CODE, ORG_TYPE, 
        MOBILE, FAX, ADDRESS, DEPART_ORDER
    </sql>
    
    <!-- 查询所有数据 -->
    <select id="findSDepartAll" resultMap="sDepartMap">
        SELECT
        <include refid="allColumns" />
        FROM T_S_DEPART
    </select>
    
    <!-- 根据条件查询数据 -->
    <select id="findSDepartByCondition" resultMap="sDepartMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM T_S_DEPART WHERE 1 = 1
        <if test="departname != null and departname != ''">
            AND DEPARTNAME LIKE CONCAT('%',#{departname},'%')
        </if>
        <if test="description != null and description != ''">
            AND DESCRIPTION LIKE CONCAT('%',#{description},'%')
        </if>
        <if test="parentdepartid != null and parentdepartid != ''">
            AND PARENTDEPARTID LIKE CONCAT('%',#{parentdepartid},'%')
        </if>
        <if test="orgCode != null and orgCode != ''">
            AND ORG_CODE LIKE CONCAT('%',#{orgCode},'%')
        </if>
        <if test="orgType != null and orgType != ''">
            AND ORG_TYPE LIKE CONCAT('%',#{orgType},'%')
        </if>
        <if test="mobile != null and mobile != ''">
            AND MOBILE LIKE CONCAT('%',#{mobile},'%')
        </if>
        <if test="fax != null and fax != ''">
            AND FAX LIKE CONCAT('%',#{fax},'%')
        </if>
        <if test="address != null and address != ''">
            AND ADDRESS LIKE CONCAT('%',#{address},'%')
        </if>
        <if test="departOrder != null and departOrder != ''">
            AND DEPART_ORDER LIKE CONCAT('%',#{departOrder},'%')
        </if>
    </select>
    
    <!-- 根据主键查询数据 -->
    <select id="findSDepartByIds" resultMap="sDepartMap" parameterType="list">
        SELECT
        <include refid="allColumns" />
        FROM T_S_DEPART WHERE ID IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    
    <!-- 插入数据 -->
    <insert id="insertSDepart" parameterType="map">
        INSERT INTO T_S_DEPART (<include refid="allColumns" />)
        VALUES (
            #{id},
            #{departname},
            #{description},
            #{parentdepartid},
            #{orgCode},
            #{orgType},
            #{mobile},
            #{fax},
            #{address},
            #{departOrder}
        )
    </insert>
    
    <!-- 批量插入数据 -->
    <insert id="insertSDeparts" parameterType="list">
        INSERT INTO T_S_DEPART (<include refid="allColumns" />)
        VALUES (
        <foreach collection="list" index="index" item="item" separator=",">
            (
                #{item.id},
                #{item.departname},
                #{item.description},
                #{item.parentdepartid},
                #{item.orgCode},
                #{item.orgType},
                #{item.mobile},
                #{item.fax},
                #{item.address},
                #{item.departOrder}
            )
        </foreach>
    </insert>
    
    <!-- 修改数据 -->
    <update id="updateSDepart" parameterType="map">
        UPDATE T_S_DEPART SET
            DEPARTNAME = #{departname},
            DESCRIPTION = #{description},
            PARENTDEPARTID = #{parentdepartid},
            ORG_CODE = #{orgCode},
            ORG_TYPE = #{orgType},
            MOBILE = #{mobile},
            FAX = #{fax},
            ADDRESS = #{address},
            DEPART_ORDER = #{departOrder}
        WHERE ID = #{id}
    </update>
    
    <!-- 批量修改数据 -->
    <update id="updateSDeparts" parameterType="list">
        <foreach collection="list" index="index" item="item" separator=";">
            UPDATE T_S_DEPART SET
                DEPARTNAME = #{item.departname},
                DESCRIPTION = #{item.description},
                PARENTDEPARTID = #{item.parentdepartid},
                ORG_CODE = #{item.orgCode},
                ORG_TYPE = #{item.orgType},
                MOBILE = #{item.mobile},
                FAX = #{item.fax},
                ADDRESS = #{item.address},
                DEPART_ORDER = #{item.departOrder}
            WHERE ID = #{item.id}
        </foreach>
    </update>
    
    <!-- 根据主键删除数据 -->
    <delete id="deleteSDepartById" parameterType="string">
        DELETE FROM T_S_DEPART WHERE ID = #{id}
    </delete>
    
    <!-- 根据主键批量删除数据 -->
    <delete id="deleteSDepartByIds" parameterType="list">
        DELETE FROM T_S_DEPART WHERE ID IN
        <foreach collection="list" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>